- name: functions
  hosts: localhost
  connection: local
  become: yes
  vars:
    technologies: "DevOps, ansible, kubernates, shellscript, jenking, cicd, docker, terraform"
    tags:
      Application: "payment"
      Environment: "Dev"
    name: Santhosh Tonanki ALIvelu
    my_gmail: SanthoshtOnanki1996@gmail.com
    ipaddress: 192.68.156.35

  tasks:
  - name: print the changes string into list
    ansible.builtin.debug:
      msg: "{{ technologies | split(',') }}"

  - name: print the changes directory into list
    ansible.builtin.debug:
      msg: "Tags are: {{ tags | dict2items }}"

  - name: print the changes from directory into list
    ansible.builtin.debug:
      msg: "Tags map: {{ tags | dict2items | items2dict }}"

  - name: read yaml and take it into variable
    ansible.builtin.set_fact:  #set fact antey variable ni define cheyadam annamata
      student_yaml: "{{ lookup('file', 'student.yaml') | from_yaml }}"

  - name: convert yaml into json
    ansible.builtin.debug:
      msg: "json: {{ student_yaml | to_json }}"

  - name: save json to file
    ansible.builtin.copy:
      dest: ./student-information.json
      content: "{{ student_yaml | to_nice_json }}"
  
  - name: convert uppercase
    ansible.builtin.debug:
      msg: "{{ name | upper }}"

  - name: conert into lowercase
    ansible.builtin.debug:
      msg: "{{ my_gmail | lower }}"

  - name: check valid ip address or not
    ansible.builtin.debug:
      msg: "{{ ipaddress | ansible.utils.ipaddr }}"

  - name: grep for root
    # ansible.builtin.command: cat /etc/passwd | grep root. here we can use with this command also but this will use for small commands. for complex commands need to use "shell"
    ansible.builtin.shell: cat /etc/passwd | grep root
    register: command_output

  - name: print command_output
    ansible.builtin.debug:
      msg: "{{ command_output }}"
